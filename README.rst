SAR Calibration Tool
====================


SAR Calibration Tool (SCT) is the tool for the radiometric and geometric calibration of SAR data.

SCT can be used to analyse SAR products acquired over calibration sites, i.e. locations where calibration targets, like transponders or corner reflectors, are installed, to derive a set of useful information for each target, i.e.:

* Range and azimuth resolutions
* Range and azimuth Absolute Localization Errors (ALE)
* Radar Cross Section (RCS) and Signal to Clutter Ratio (SCR)
* Incidence, look and squint angles of observation

and more.

These information are collected in a database and can be used to support accurate radiometric and geometric calibration of a given SAR mission data.

In particular, ALE measurements are performed applying both instrument-related corrections (bistatic delay, Doppler shift, ...) and the most relevant geophysical corrections (plate tectonics and Solid Earth Tides (SET) displacements, ionospheric and tropospheric path delays).

Note: The current version of the tool is able to manage only Sentinel-1 data and related orbit files (Earth Explorer format), but it has been designed to be easily extended to other SAR mission data in the future.


Getting Started
---------------

Requirements
^^^^^^^^^^^^
The packages required by SAR Calibration Tool are specified in the file ``environment.yml`` included in its distribution.

Minimum requirements:

* python 3.8


Install
-------
In order to install SAR Calibration Tool follow these steps:

Clone the SAR Calibration Tool ``git`` repository in a folder of your local hard drive and move inside it

Create a conda environment with python 3.8, then activate the environment

.. code-block:: bash
    $ conda create -n sct_env python=3.8
    $ activate sct_env

Install the package via pip install 

Install the coda package (see https://github.com/conda-forge/coda-feedstock)

Compile the external tool solid by going to the sct/external of your SCT installation and running

.. code-block:: bash

    $ f2py -c build_solid/solid__for_sct.for -m solid

N.B. You may have to first run (see https://github.com/numpy/numpy/issues/22572)

.. code-block:: bash

    $ export CFLAGS=-std=c99


Contents
--------

The SCT distribution includes, in addition to the packages source code, a set of default folders where to store SAR products, auxiliary files, resources, ...

In addition, the ``docs`` folder, including all the project documentation, contains two Jupyter Notebooks describing:

* ``sct_tutorial.ipynb``: how to exploit the SAR Calibration Tool functionalities to analyse a SAR product acquired over a calibration site
* ``sct_display_results.ipynb``: how to play with the results generated by the SAR Calibration Tool and generate nice plots

For more details about SCT usage refer directly to documentation and to these two notebooks.


License
-------
SCT is distributed under the terms of the MIT License.

See ``LICENSE`` file for more details.

